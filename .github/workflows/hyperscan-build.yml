# This is a basic workflow to help you get started with Actions

name: hyperscan-build

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set git to autocrlf          
        run: git config --global core.autocrlf input

      - name: Checkout w/ submodules and autocrlf
        uses: actions/checkout@v3
        with:
          submodules: true

      # Setup the dependencies for building.
      - name: Setup build using bash in cygwin
        shell: cmd
        run: |
          echo -- pwd working dir --
          pwd
          echo -- env.GITHUB_WORKSPACE --
          echo %GITHUB_WORKSPACE%
          echo -- all Set --
          set
          echo -- show dir --
          dir
          echo -- 7 unzip ragel --
          7z x ragel-6.10.tar.gz
          7z x ragel-6.10.tar
          7z x -o hyperscan/ pcre-8.45.zip 
          7z x -o hyperscan/ sqlite-amalgamation-3390000.zip
          7z x -o hyperscan/ boost_1_79_0.7z
          echo -- show dir --
          dir
          echo -- show ragel dir --
          dir ragel-6.10

      - name: Install Cygwin Action
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: x64
          packages: make gcc-core
      
      # Alternatively, you can set Cygwin's bash as the shell to use:
      - name: Run cygwin bash shell
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
        run: |
          # This is a real bash script!
          echo -- printenv
          printenv
          echo -- cd GITHUB_WORKSPACE
          echo $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE
          echo -- ls directory
          ls -la
          echo -- cd ragel
          cd ragel-6.10
          echo -- ./configure
          ./configure
          echo -- make ragel
          make
          make install
          echo -- ls result
          ls -la
          echo -- cd hyperscan
          cd ../hyperscan
          echo -- mkdir build
          mkdir build
          echo -- test cmake -G
          CMake -G
          echo -- ls directory
          ls -la
          

